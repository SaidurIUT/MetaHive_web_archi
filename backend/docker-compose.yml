version: "3.8"
services:
  # Keycloak Database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:8
    volumes:
      - keycloak_mysql_data:/var/lib/mysql # Changed to named volume
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    networks:
      - meta-network

  # Application Database (Accessible from outside Docker)
  app-mysql:
    container_name: app-mysql
    image: mysql:8
    ports:
      - "3309:3306" # Expose MySQL on port 3309 to host
    volumes:
      - app_mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    networks:
      - meta-network
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --bind-address=0.0.0.0

  # Keycloak Service
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command:
      - "start-dev"
      - "--import-realm"
      - "--health-enabled=true"
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8181
    ports:
      - "8181:8181"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/:ro # Read-only mount
      - keycloak_data:/opt/keycloak/data # Persistent data
    depends_on:
      - keycloak-mysql
    networks:
      - meta-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  keycloak_mysql_data:
    name: keycloak_mysql_data
  keycloak_data:
    name: keycloak_data
  app_mysql_data:
    name: app_mysql_data

networks:
  meta-network:
    driver: bridge